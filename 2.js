webpackJsonp([2],{219:function(e,o,t){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(o,"__esModule",{value:!0});var r=t(196),i=t(220),a=n(i);o["default"]=(0,r.createContainer)(a["default"]),e.exports=o["default"]},220:function(e,o,t){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function r(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function i(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Super expression must either be null or a function, not "+typeof o);e.prototype=Object.create(o&&o.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),o&&(Object.setPrototypeOf?Object.setPrototypeOf(e,o):e.__proto__=o)}Object.defineProperty(o,"__esModule",{value:!0});var a=function(){function e(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(o,t,n){return t&&e(o.prototype,t),n&&e(o,n),o}}(),l=function(e,o,t){for(var n=!0;n;){var r=e,i=o,a=t;n=!1,null===r&&(r=Function.prototype);var l=Object.getOwnPropertyDescriptor(r,i);if(void 0!==l){if("value"in l)return l.value;var c=l.get;if(void 0===c)return;return c.call(a)}var s=Object.getPrototypeOf(r);if(null===s)return;e=s,o=i,t=a,n=!0,l=s=void 0}},c=t(2),s=n(c),d=t(221),p=n(d),u=function(e){function o(){r(this,o),l(Object.getPrototypeOf(o.prototype),"constructor",this).apply(this,arguments)}return i(o,e),a(o,[{key:"render",value:function(){var e={__html:t(223)};return s["default"].createElement("div",{className:p["default"]["this"],dangerouslySetInnerHTML:e})}}],[{key:"getProps",value:function(){return{}}}]),o}(s["default"].Component);o["default"]=u,e.exports=o["default"]},221:function(e,o,t){var n=t(222);"string"==typeof n&&(n=[[e.id,n,""]]);t(213)(n,{});n.locals&&(e.exports=n.locals)},222:function(e,o,t){o=e.exports=t(212)(),o.locals={"this":"_3KDqByl73uCIiLK21pHPRx"},o.push([e.id,"._3KDqByl73uCIiLK21pHPRx{background-color:#fff;border:1px dotted gray;padding:1em}",""])},223:function(e,o){e.exports='<h1 id=webpack-react-starter>webpack/react-starter</h1><p>Starter template for react and webpack.</p><h2 id=features>Features</h2><ul><li>Compilation with webpack</li><li>React and jsx</li><li>react-router</li><li>Stylesheets can be CSS, LESS, SASS, Stylus or mixed</li><li>Embedded resources like images or fonts use DataUrls if appropriate</li><li>A simple flag loads a react component (and dependencies) on demand.</li><li>Development<ul><li>Development server</li><li>Optionally Hot Module Replacement development server (LiveReload for Stylesheets and React components enabled)</li><li>Uses SourceUrl for performance, but you may switch to SourceMaps easily</li></ul></li><li>Production<ul><li>Server example for prerendering for React components</li><li>Initial data inlined in page</li><li>Long Term Caching through file hashes enabled</li><li>Generate separate css file to avoid FOUC</li><li>Minimized CSS and javascript</li></ul></li><li>Also supports coffee-script files if you are more a coffee-script person.</li><li>You can also require markdown or text files for your content.</li></ul><h2 id=local-installation>Local Installation</h2><p>Install <a href=https://nodejs.org>node.js</a> or <a href=https://iojs.org>io.js</a></p><p>Just clone this repo and change the <code>origin</code> git remote.</p><pre><code class=lang-text>npm install\n</code></pre><h2 id=installation-via-vagrant>Installation via Vagrant</h2><p>Install <a href=https://vagrantup.com>vagrant</a></p><pre><code class=lang-text>vagrant up\nvagrant ssh\ncd /vagrant\n</code></pre><h2 id=development-server>Development server</h2><pre><code class=lang-text># start the webpack-dev-server\nnpm run dev-server\n# wait for the first compilation is successful\n\n# in another terminal/console\n# start the node.js server in development mode\nnpm run start-dev\n\n# open this url in your browser\nhttp://localhost:8080/\n</code></pre><p>The configuration is <code>webpack-dev-server.config.js</code>.</p><p>It automatically recompiles and refreshes the page when files are changed.</p><p>Also check the <a href=http://webpack.github.io/docs/webpack-dev-server.html>webpack-dev-server documentation</a>.</p><h2 id=hot-module-replacement-development-server>Hot Module Replacement development server</h2><pre><code class=lang-text># start the webpack-dev-server in HMR mode\nnpm run hot-dev-server\n# wait for the first compilation is successful\n\n# in another terminal/console\n# start the node.js server in development mode\nnpm run start-dev\n\n# open this url in your browser\nhttp://localhost:8080/\n</code></pre><p>The configuration is <code>webpack-hot-dev-server.config.js</code>.</p><p>It automatically recompiles when files are changed. When a hot-replacement-enabled file is changed (i. e. stylesheets or React components) the module is hot-replaced. If Hot Replacement is not possible the page is refreshed.</p><p>Hot Module Replacement has a performance impact on compilation.</p><h2 id=production-compilation-and-server>Production compilation and server</h2><pre><code class=lang-text># build the client bundle and the prerendering bundle\nnpm run build\n\n# start the node.js server in production mode\nnpm run start\n\n# open this url in your browser\nhttp://localhost:8080/\n</code></pre><p>The configuration is <code>webpack-production.config.js</code>.</p><p>The server is at <code>lib/server.js</code></p><p>The production setting builds two configurations: one for the client (<code>build/public</code>) and one for the serverside prerendering (<code>build/prerender</code>).</p><h2 id=legacy-static-assets>Legacy static assets</h2><p>Assets in <code>public</code> are also served.</p><h2 id=build-visualization>Build visualization</h2><p>After a production build you may want to visualize your modules and chunks tree.</p><p>Use the <a href="http://webpack.github.io/analyse/">analyse tool</a> with the file at <code>build/stats.json</code>.</p><h2 id=loaders-and-file-types>Loaders and file types</h2><p>Many file types are preconfigured, but not every loader is installed. If you get an error like <code>Cannot find module &quot;xxx-loader&quot;</code>, you&#39;ll need to install the loader with <code>npm install xxx-loader --save</code> and restart the compilation.</p><h2 id=common-changes-to-the-configuration>Common changes to the configuration</h2><h3 id=add-more-entry-points>Add more entry points</h3><p>(for a multi page app)</p><ol><li>Add an entry point to <code>make-webpack-config.js</code> (<code>var entry</code>).</li><li>Add a new top-level react component in <code>app</code> (<code>xxxRoutes.js</code>, <code>xxxStoreDescriptions.js</code>, <code>xxxStores.js</code>).</li><li>(Optional) Enable <code>commonsChunk</code> in <code>webpack-production.config.js</code> and add <code>&lt;script src=&quot;COMMONS_URL&quot;&gt;&lt;/script&gt;</code> to <code>app/prerender.html</code>.</li><li>Modify the server code to require, serve and prerender the other entry point.</li><li>Restart compilation.</li></ol><h3 id=switch-devtool-to-sourcemaps>Switch devtool to SourceMaps</h3><p>Change <code>devtool</code> property in <code>webpack-dev-server.config.js</code> and <code>webpack-hot-dev-server.config.js</code> to <code>&quot;source-map&quot;</code> (better module names) or <code>&quot;eval-source-map&quot;</code> (faster compilation).</p><p>SourceMaps have a performance impact on compilation.</p><h3 id=enable-sourcemaps-in-production>Enable SourceMaps in production</h3><ol><li>Uncomment the <code>devtool</code> line in <code>webpack-production.config.js</code>.</li><li>Make sure that the folder <code>build\\public\\debugging</code> is access controlled, i. e. by password.</li></ol><p>SourceMaps have a performance impact on compilation.</p><p>SourceMaps contains your unminimized source code, so you need to restrict access to <code>build\\public\\debugging</code>.</p><h3 id=coffeescript>Coffeescript</h3><p>Coffeescript is not installed/enabled by default to not disturb non-coffee developer, but you can install it easily:</p><ol><li><code>npm install coffee-redux-loader --save</code></li><li>In <code>make-webpack-config.js</code> add <code>&quot;.coffee&quot;</code> to the <code>var extensions = ...</code> line.</li></ol><h2 id=license>License</h2><p>Copyright (c) 2012-2015 Tobias Koppers <a href="https://www.gittip.com/sokra/"><img src=http://img.shields.io/gittip/sokra.png alt="Gittip donate button"></a></p><p>MIT (<a href=http://www.opensource.org/licenses/mit-license.php>http://www.opensource.org/licenses/mit-license.php</a>)</p>'}});